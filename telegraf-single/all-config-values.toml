[global_tags]
  dc = "us-east-1"
  user = "$USER"
[agent]
  collection_jitter = "0s"
  debug = false
  flush_interval = "10s"
  flush_jitter = "0s"
  hostname = ""
  interval = "1s"
  logfile = ""
  omit_hostname = false
  precision = ""
  quiet = false
  round_interval = true
[[outputs.amqp]]
  auth_method = "PLAIN"
  data_format = "influx"
  database = "telegraf"
  exchange = "telegraf"
  insecure_skip_verify = false
  precision = "s"
  retention_policy = "default"
  routing_tag = "host"
  ssl_ca = "/etc/telegraf/ca.pem"
  ssl_cert = "/etc/telegraf/cert.pem"
  ssl_key = "/etc/telegraf/key.pem"
  url = "amqp://localhost:5672/influxdb"
[[outputs.influxdb]]
  database = "telegraf"
  insecure_skip_verify = false
  password = "metricsmetricsmetricsmetrics"
  retention_policy = ""
  ssl_ca = "/etc/telegraf/ca.pem"
  ssl_cert = "/etc/telegraf/cert.pem"
  ssl_key = "/etc/telegraf/key.pem"
  timeout = "5s"
  urls = [
    "http://influxdb.tick:8086"
  ]
  user_agent = "telegraf"
  username = "telegraf"
  write_consistency = "any"
[[outputs.kafka]]
  brokers = [
    "localhost:9092"
  ]
  data_format = "influx"
  insecure_skip_verify = false
  routing_tag = "host"
  ssl_ca = "/etc/telegraf/ca.pem"
  ssl_cert = "/etc/telegraf/cert.pem"
  ssl_key = "/etc/telegraf/key.pem"
  topic = "telegraf"
[[outputs.mqtt]]
  data_format = "influx"
  insecure_skip_verify = false
  password = "metricsmetricsmetricsmetrics"
  servers = [
    "localhost:1883"
  ]
  ssl_ca = "/etc/telegraf/ca.pem"
  ssl_cert = "/etc/telegraf/cert.pem"
  ssl_key = "/etc/telegraf/key.pem"
  topic_prefix = "telegraf"
  username = "telegraf"
[[outputs.nats]]
  data_format = "influx"
  insecure_skip_verify = false
  password = ""
  servers = [
    "nats://localhost:4222"
  ]
  ssl_ca = "/etc/telegraf/ca.pem"
  ssl_cert = "/etc/telegraf/cert.pem"
  ssl_key = "/etc/telegraf/key.pem"
  subject = "telegraf"
  username = ""
[[outputs.nsq]]
  data_format = "influx"
  server = "localhost:4150"
  topic = "telegraf"
[[inputs.aerospike]]
  servers = [
    "localhost:3000"
  ]
[[inputs.apache]]
  urls = [
    "http://localhost/server-status?auto"
  ]
[[inputs.cassandra]]
  context = "/jolokia/read"
  metrics = [
    "/java.lang:type=Memory/HeapMemoryUsage",
    "/org.apache.cassandra.metrics:type=Table,keyspace=*,scope=*,name=ReadLatency"
  ]
  servers = [
    "myuser:mypassword@10.10.10.1:8778",
    "10.10.10.2:8778",
    ":8778"
  ]
[[inputs.cloudwatch]]
  access_key = ""
  cache_ttl = "10m"
  delay = "5m"
  interval = "5m"
  [[inputs.cloudwatch.metrics]]
    [[inputs.cloudwatch.metrics.dimensions]]
        name = "LoadBalancerName"
        value = "p-example"
    names = [
        "Latency",
        "RequestCount"
    ]
  namespace = "AWS/ELB"
  period = "5m"
  profile = ""
  ratelimit = 10
  region = "us-east-1"
  role_arn = ""
  secret_key = ""
  shared_credential_file = ""
  token = ""
[[inputs.consul]]
  address = "localhost"
  datacentre = ""
  password = ""
  scheme = "http"
  token = ""
  username = ""
[[inputs.couchbase]]
  servers = [
    "http://localhost:8091"
  ]
[[inputs.couchdb]]
  hosts = [
    "http://localhost:8086/_stats"
  ]
[[inputs.disque]]
  servers = [
    "localhost"
  ]
[[inputs.dns_query]]
  domains = [
    "."
  ]
  port = 53
  record_type = "A"
  servers = [
    "8.8.8.8"
  ]
  timeout = 2
[[inputs.dovecot]]
  filters = [
    ""
  ]
  servers = [
    "localhost:24242"
  ]
  type = "global"
[[inputs.elasticsearch]]
  cluster_health = false
  http_timeout = "5s"
  insecure_skip_verify = false
  local = true
  servers = [
    "http://localhost:9200"
  ]
  ssl_ca = "/etc/telegraf/ca.pem"
  ssl_cert = "/etc/telegraf/cert.pem"
  ssl_key = "/etc/telegraf/key.pem"
[[inputs.graylog]]
  insecure_skip_verify = false
  metrics = [
    "jvm.cl.loaded",
    "jvm.memory.pools.Metaspace.committed"
  ]
  password = ""
  servers = [
    "http://[graylog-server-ip]:12900/system/metrics/multiple"
  ]
  ssl_ca = "/etc/telegraf/ca.pem"
  ssl_cert = "/etc/telegraf/cert.pem"
  ssl_key = "/etc/telegraf/key.pem"
  username = ""
[[inputs.haproxy]]
  servers = [
    "http://myhaproxy.com:1936/haproxy?stats"
  ]
[[inputs.http_listener]]
  max_body_size = 0
  max_line_size = 0
  read_timeout = "10s"
  service_address = ":8186"
  write_timeout = "10s"
[[inputs.influxdb]]
  timeout = "5s"
  urls = [
    "http://influxdb.tick:8086/debug/vars",
    "http://test-influxdb.influxdb:8086/debug/vars"
  ]
[[inputs.lustre2]]
  mds_procfiles = [
    "/proc/fs/lustre/mdt/*/md_stats",
    "/proc/fs/lustre/mdt/*/job_stats"
  ]
  ost_procfiles = [
    "/proc/fs/lustre/obdfilter/*/stats",
    "/proc/fs/lustre/osd-ldiskfs/*/stats",
    "/proc/fs/lustre/obdfilter/*/job_stats"
  ]
[[inputs.mailchimp]]
  api_key = ""
  campaign_id = ""
  days_old = 0
[[inputs.memcached]]
  servers = [
    "localhost:11211"
  ]
  unix_sockets = [
    "/var/run/memcached.sock"
  ]
[[inputs.mesos]]
  master_collections = [
    "resources",
    "master",
    "system",
    "agents",
    "frameworks",
    "tasks",
    "messages",
    "evqueue",
    "registrar"
  ]
  masters = [
    "localhost:5050"
  ]
  slave_collections = [
    "resources",
    "agent",
    "system",
    "executors",
    "tasks",
    "messages"
  ]
  slaves = [
  ]
  timeout = 100
[[inputs.mongodb]]
  gather_perdb_stats = false
  servers = [
    "mongodb://user:password@127.0.0.1:27017"
  ]
[[inputs.mysql]]
  gather_binary_logs = false
  gather_event_waits = false
  gather_file_events_stats = false
  gather_index_io_waits = false
  gather_info_schema_auto_inc = true
  gather_perf_events_statements = false
  gather_process_list = true
  gather_slave_status = true
  gather_table_io_waits = false
  gather_table_lock_waits = false
  gather_table_schema = false
  interval_slow = "30m"
  perf_events_statements_digest_text_limit = 120
  perf_events_statements_limit = 250
  perf_events_statements_time_limit = 86400
  servers = [
    "tcp(127.0.0.1:3306)?tls=false"
  ]
  table_schema_databases = [
  ]
[[inputs.net_response]]
  address = "github.com:80"
  expect = "ssh"
  protocol = "tcp"
  read_timeout = "1s"
  send = "ssh"
  timeout = "1s"
[[inputs.nginx]]
  urls = [
    "http://nginx.nginx-ingress/nginx_status"
  ]
[[inputs.nsq]]
  endpoints = [
    "http://localhost:4151"
  ]
[[inputs.phpfpm]]
  urls = [
    "http://localhost/status"
  ]
[[inputs.ping]]
  count = 1
  interface = ""
  ping_interval = 1
  timeout = 1
  urls = [
    "www.google.com"
  ]
[[inputs.postgresql]]
  address = "postgres://user:password@localhost?sslmode=disable"
  databases = [
    "app_production",
    "testing"
  ]
  ignored_databases = [
    "postgres"
  ]
[[inputs.prometheus]]
  bearer_token = "/path/to/bearer/token"
  insecure_skip_verify = false
  ssl_ca = "/path/to/cafile"
  ssl_cert = "/path/to/certfile"
  ssl_key = "/path/to/keyfile"
  urls = [
    "http://localhost:9100/metrics"
  ]
[[inputs.rabbitmq]]
  insecure_skip_verify = false
  name = "rmq-server-1"
  nodes = [
    "rabbit@node1",
    "rabbit@node2"
  ]
  password = "guest"
  ssl_ca = "/etc/telegraf/ca.pem"
  ssl_cert = "/etc/telegraf/cert.pem"
  ssl_key = "/etc/telegraf/key.pem"
  url = "http://localhost:15672"
  username = "guest"
[[inputs.raindrops]]
  urls = [
    "http://localhost:8080/_raindrops"
  ]
[[inputs.redis]]
  servers = [
    "tcp://localhost:6379"
  ]
[[inputs.rethinkdb]]
  servers = [
    "127.0.0.1:28015"
  ]
[[inputs.riak]]
  servers = [
    "http://localhost:8098"
  ]
[[inputs.sqlserver]]
  servers = [
    "Server=192.168.1.10;Port=1433;User Id=<user>;Password=<pw>;app name=telegraf;log=1;"
  ]
[[inputs.statsd]]
  allowed_pending_messages = 10000
  delete_counters = false
  delete_gauges = false
  delete_sets = false
  delete_timings = true
  metric_separator = "_"
  parse_data_dog_tags = false
  percentile_limit = 1000
  percentiles = [
    90
  ]
  service_address = ":8125"
  templates = [
    "cpu.* measurement*"
  ]
[[inputs.tcp_listener]]
  allowed_pending_messages = 10000
  data_format = "influx"
  max_tcp_connections = 250
  service_address = ":8094"
[[inputs.twemproxy]]
  addr = "localhost:22222"
  pools = [
    "redis_pool",
    "mc_pool"
  ]
[[inputs.udp_listener]]
  allowed_pending_messages = 10000
  data_format = "influx"
  service_address = ":8092"
[[inputs.webhooks]]
  [[inputs.webhooks.filestack]]
    path = /filestack
  [[inputs.webhooks.github]]
    path = /github
  [[inputs.webhooks.mandrill]]
    path = /mandrill
  [[inputs.webhooks.rollbar]]
    path = /rollbar
  service_address = ":1619"
[[inputs.zookeeper]]
  servers = [
    "localhost:2181"
  ]